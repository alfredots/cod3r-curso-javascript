{"version":3,"sources":["components/Button.jsx","main/Calculator.jsx","components/Display.jsx","serviceWorker.js","index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","__webpack_exports__","props","classes","operation","double","triple","a","createElement","onClick","e","click","label","className","initialState","displayValue","clearDisplay","values","current","Calculator","_this","Object","C_Users_alfredo_Documents_javascript_course_react_calculadora_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","C_Users_alfredo_Documents_javascript_course_react_calculadora_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","C_Users_alfredo_Documents_javascript_course_react_calculadora_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","state","C_Users_alfredo_Documents_javascript_course_react_calculadora_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","clearMemory","bind","C_Users_alfredo_Documents_javascript_course_react_calculadora_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","setOperation","addDigit","setState","equals","currentOperation","C_Users_alfredo_Documents_javascript_course_react_calculadora_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","eval","concat","digit","includes","i","newValue","parseFloat","react__WEBPACK_IMPORTED_MODULE_8___default","_components_Display__WEBPACK_IMPORTED_MODULE_11__","value","_components_Button__WEBPACK_IMPORTED_MODULE_10__","Component","Boolean","window","location","hostname","match","ReactDOM","render","react_default","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0cd554a8.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Button.css'\r\n\r\nexport default props => {\r\n\r\n    let classes = 'button '\r\n    classes += props.operation? 'operation ': ''\r\n    classes += props.double? 'double ': ''\r\n    classes += props.triple? 'triple': ''\r\n\r\n    return (<button \r\n                onClick={e => props.click(props.label)}\r\n                className={classes}>\r\n                {props.label}\r\n            </button>)\r\n}\r\n    ","import React, {Component} from 'react'\r\nimport './Calculator.css'\r\nimport Button from '../components/Button'\r\nimport Display from '../components/Display';\r\n\r\nconst initialState = {\r\n    displayValue: '0',\r\n    clearDisplay: false,\r\n    operation: null,\r\n    values: [0,0],\r\n    current:0\r\n}\r\n\r\nexport default class Calculator extends Component{\r\n\r\n    state = {...initialState}\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.clearMemory = this.clearMemory.bind(this)\r\n        this.setOperation = this.setOperation.bind(this)\r\n        this.addDigit = this.addDigit.bind(this)\r\n    }\r\n\r\n    clearMemory(){\r\n        this.setState({...initialState})\r\n    }\r\n\r\n    setOperation(operation){\r\n        if(this.state.current === 0){\r\n            this.setState({operation, current:1, clearDisplay: true})\r\n        }else{\r\n            const equals = operation === '='\r\n            const currentOperation = this.state.operation\r\n            const values = [...this.state.values]\r\n            values[0] = eval(`${values[0]} ${currentOperation} ${values[1]}`)\r\n            values[1] = 0\r\n            \r\n            this.setState({\r\n                displayValue: values[0],\r\n                operation: equals? null: operation,\r\n                current: equals? 0 : 1,\r\n            })\r\n        }\r\n    }\r\n\r\n    addDigit(digit){\r\n        if(digit === '.' && this.state.displayValue.includes('.')){\r\n            return\r\n        }\r\n\r\n        const clearDisplay = this.state.displayValue === '0' ||\r\n                                this.state.clearDisplay;\r\n        const currentValue = clearDisplay? '':this.state.displayValue;\r\n        const displayValue = currentValue + digit\r\n        this.setState({displayValue, clearDisplay: false})\r\n\r\n        if(digit !== '.'){\r\n            const i = this.state.current\r\n            const newValue = parseFloat(displayValue)\r\n            const values = [...this.state.values]\r\n            values[i] = newValue\r\n            this.setState({values})\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div className=\"calculator\">\r\n                <Display value={this.state.displayValue} />\r\n                <Button label=\"AC\"click={this.clearMemory} triple/>\r\n                <Button label=\"/\" click={this.setOperation} operation/>\r\n                <Button label=\"7\" click={this.addDigit}/>\r\n                <Button label=\"8\" click={this.addDigit}/>\r\n                <Button label=\"9\" click={this.addDigit}/>\r\n                <Button label=\"*\" click={this.setOperation} operation/>\r\n                <Button label=\"4\" click={this.addDigit}/>\r\n                <Button label=\"5\" click={this.addDigit}/>\r\n                <Button label=\"6\" click={this.addDigit}/>\r\n                <Button label=\"-\"click={this.setOperation} operation/>\r\n                <Button label=\"1\" click={this.addDigit}/>\r\n                <Button label=\"2\" click={this.addDigit}/>\r\n                <Button label=\"3\" click={this.addDigit}/>\r\n                <Button label=\"+\" click={this.setOperation} operation/>\r\n                <Button label=\"0\" click={this.addDigit} double/>\r\n                <Button label=\".\" click={this.addDigit} />\r\n                <Button label=\"=\" click={this.setOperation} operation/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport './Display.css'\r\n\r\nexport default props =>\r\n    <div className=\"display\">{props.value}</div>","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Calculator from './main/Calculator';\r\n\r\nReactDOM.render(\r\n    <div>\r\n        <h1>Calculadora</h1>\r\n        <Calculator/>\r\n    </div>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}